{"ast":null,"code":"var _jsxFileName = \"/Users/anneso/Documents/Ecole Multime\\u0301dia/React/todolist/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Todolist from \"./components/Todolist\";\nimport { nanoid } from 'nanoid';\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todolists, setTodolists] = useState([{\n    id: nanoid(),\n    title: \"Todolist 1\",\n    tasks: [{\n      id: nanoid(),\n      title: \"Faire les courses\",\n      isDone: true\n    }, {\n      id: nanoid(),\n      title: \"Nourrir le chat\",\n      isDone: false\n    }, {\n      id: nanoid(),\n      title: \"Faire des pancakes\",\n      isDone: false\n    }]\n  }, {\n    id: nanoid(),\n    title: \"Todolist 2\",\n    tasks: [{\n      id: nanoid(),\n      title: \"Corde à sauter\",\n      isDone: true\n    }, {\n      id: nanoid(),\n      title: \"Shadow\",\n      isDone: false\n    }, {\n      id: nanoid(),\n      title: \"Travail au sac\",\n      isDone: true\n    }, {\n      id: nanoid(),\n      title: \"Renfo\",\n      isDone: false\n    }]\n  }]);\n\n  function updateTodo(todoUpdated) {\n    let pos = todolists.findIndex(todo => todo.id === todoUpdated.id);\n\n    if (pos > -1) {\n      todolists.splice(pos, 1, todoUpdated);\n      setTodolists([...todolists]);\n    }\n  }\n\n  function addList(params) {\n    const newList = {\n      id: nanoid(),\n      title: \"Nouvelle liste\",\n      tasks: []\n    };\n    setTodolists(newList, ...todolists);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TodoApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addList,\n        children: [\"Cr\\xE9er une liste\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todolist-container\",\n      children: todolists.map(todo => /*#__PURE__*/_jsxDEV(Todolist, {\n        todo: todo,\n        updateTodo: updateTodo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"H7ASz8yYO+kXmZV2Rzk4h1kUXdE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anneso/Documents/Ecole Multimédia/React/todolist/src/App.js"],"names":["Todolist","nanoid","useState","FontAwesomeIcon","faEdit","App","todolists","setTodolists","id","title","tasks","isDone","updateTodo","todoUpdated","pos","findIndex","todo","splice","addList","params","newList","map"],"mappings":"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","sourcesContent":["import Todolist from \"./components/Todolist\";\nimport { nanoid } from 'nanoid';\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nfunction App() {\n  const [todolists, setTodolists] = useState([\n    {\n      id: nanoid(),\n      title: \"Todolist 1\",\n      tasks: [{ id: nanoid(), title: \"Faire les courses\", isDone: true },\n      { id: nanoid(), title: \"Nourrir le chat\", isDone: false },\n      { id: nanoid(), title: \"Faire des pancakes\", isDone: false }\n      ]\n    },\n    {\n      id: nanoid(),\n      title: \"Todolist 2\",\n      tasks: [{ id: nanoid(), title: \"Corde à sauter\", isDone: true },\n      { id: nanoid(), title: \"Shadow\", isDone: false },\n      { id: nanoid(), title: \"Travail au sac\", isDone: true },\n      { id: nanoid(), title: \"Renfo\", isDone: false }\n      ]\n    }\n  ]);\n\n  function updateTodo(todoUpdated) {\n    let pos = todolists.findIndex((todo => todo.id === todoUpdated.id));\n    if (pos > -1) {\n      todolists.splice(pos, 1, todoUpdated);\n      setTodolists([...todolists]);\n    }\n  }\n\n  function addList(params) {\n    const newList = {\n      id: nanoid(),\n      title: \"Nouvelle liste\",\n      tasks: []\n    }\n    setTodolists(newList, ...todolists);\n  }\n\n  return (\n    <main>\n      <header>\n        <h1>TodoApp</h1>\n        <button onClick={addList}>Créer une liste<FontAwesomeIcon icon={faEdit} /></button>\n      </header>\n      <div className=\"todolist-container\">\n        {todolists.map((todo) => (\n          <Todolist key={todo.id} todo={todo} updateTodo={updateTodo} />\n        ))}\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}