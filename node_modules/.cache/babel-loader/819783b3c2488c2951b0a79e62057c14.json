{"ast":null,"code":"var _jsxFileName = \"/Users/anneso/Documents/Ecole Multime\\u0301dia/React/todolist/src/components/Todolist.js\";\nimport EditableField from \"./EditableField\";\nimport TodoForm from \"./TodoForm\";\nimport TodoItems from \"./TodoItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todolist(props) {\n  const tasks = props.todo.tasks;\n\n  function addTask(newTask) {\n    setTasks([...tasks, newTask]);\n  }\n\n  function updateTask(taskUpdated) {\n    let pos = tasks.findIndex(task => task.id === taskUpdated.id);\n\n    if (pos > -1) {\n      tasks.splice(pos, 1, taskUpdated);\n      setTasks([...tasks]);\n    }\n  }\n\n  function deleteTask(taskDeleted) {\n    let pos = tasks.findIndex(task => task.id === taskDeleted.id);\n\n    if (pos > -1) {\n      tasks.splice(pos, 1);\n      setTasks([...tasks]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todolist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"todolist-title\",\n      children: /*#__PURE__*/_jsxDEV(EditableField, {\n        editMode: false,\n        value: \"Todolist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoItems, {\n      tasks: tasks,\n      updateTask: updateTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Todolist;\nexport default Todolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"sources":["/Users/anneso/Documents/Ecole Multimédia/React/todolist/src/components/Todolist.js"],"names":["EditableField","TodoForm","TodoItems","Todolist","props","tasks","todo","addTask","newTask","setTasks","updateTask","taskUpdated","pos","findIndex","task","id","splice","deleteTask","taskDeleted"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,CAAWD,KAAzB;;AAEA,WAASE,OAAT,CAAiBC,OAAjB,EAA0B;AACtBC,IAAAA,QAAQ,CAAC,CAAC,GAAGJ,KAAJ,EAAWG,OAAX,CAAD,CAAR;AACH;;AAED,WAASE,UAAT,CAAoBC,WAApB,EAAiC;AAC7B,QAAIC,GAAG,GAAGP,KAAK,CAACQ,SAAN,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,WAAW,CAACI,EAAjD,CAAV;;AACA,QAAIH,GAAG,GAAG,CAAC,CAAX,EAAc;AACVP,MAAAA,KAAK,CAACW,MAAN,CAAaJ,GAAb,EAAkB,CAAlB,EAAqBD,WAArB;AACAF,MAAAA,QAAQ,CAAC,CAAC,GAAGJ,KAAJ,CAAD,CAAR;AACH;AACJ;;AAED,WAASY,UAAT,CAAoBC,WAApB,EAAiC;AAC7B,QAAIN,GAAG,GAAGP,KAAK,CAACQ,SAAN,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYG,WAAW,CAACH,EAAjD,CAAV;;AACA,QAAIH,GAAG,GAAG,CAAC,CAAX,EAAc;AACVP,MAAAA,KAAK,CAACW,MAAN,CAAaJ,GAAb,EAAkB,CAAlB;AACAH,MAAAA,QAAQ,CAAC,CAAC,GAAGJ,KAAJ,CAAD,CAAR;AACH;AACJ;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA,6BAA+B,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAE,KAAzB;AAAgC,QAAA,KAAK,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEF,KAAlB;AAAyB,MAAA,UAAU,EAAEK,UAArC;AAAiD,MAAA,UAAU,EAAEO;AAA7D;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KA7BQd,Q;AA+BT,eAAeA,QAAf","sourcesContent":["import EditableField from \"./EditableField\";\nimport TodoForm from \"./TodoForm\";\nimport TodoItems from \"./TodoItems\";\n\nfunction Todolist(props) {\n    const tasks = props.todo.tasks;\n\n    function addTask(newTask) {\n        setTasks([...tasks, newTask]);\n    }\n\n    function updateTask(taskUpdated) {\n        let pos = tasks.findIndex((task => task.id === taskUpdated.id));\n        if (pos > -1) {\n            tasks.splice(pos, 1, taskUpdated);\n            setTasks([...tasks]);\n        }\n    }\n\n    function deleteTask(taskDeleted) {\n        let pos = tasks.findIndex((task => task.id === taskDeleted.id));\n        if (pos > -1) {\n            tasks.splice(pos, 1);\n            setTasks([...tasks]);\n        }\n    }\n    return (\n        <div className=\"todolist\">\n            <h2 className=\"todolist-title\"><EditableField editMode={false} value=\"Todolist\" /></h2>\n            <TodoForm addTask={addTask} />\n            <TodoItems tasks={tasks} updateTask={updateTask} deleteTask={deleteTask} />\n        </div>\n    );\n}\n\nexport default Todolist;"]},"metadata":{},"sourceType":"module"}