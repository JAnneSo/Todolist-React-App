{"ast":null,"code":"var _jsxFileName = \"/Users/anneso/Documents/Ecole Multime\\u0301dia/React/todolist/src/components/Todolist.js\";\nimport EditableField from \"./EditableField\";\nimport TodoForm from \"./TodoForm\";\nimport TodoItems from \"./TodoItems\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todolist(props) {\n  const tasks = props.todo.tasks;\n  const title = props.todo.title;\n\n  function addTask(newTask) {\n    props.updateTodo({ ...props.todo,\n      tasks: [...tasks, newTask]\n    });\n  }\n\n  function updateTask(taskUpdated) {\n    let pos = tasks.findIndex(task => task.id === taskUpdated.id);\n\n    if (pos > -1) {\n      tasks.splice(pos, 1, taskUpdated);\n      props.updateTodo({ ...props.todo,\n        tasks: [...tasks]\n      });\n    }\n  }\n\n  function deleteTask(taskDeleted) {\n    let pos = tasks.findIndex(task => task.id === taskDeleted.id);\n\n    if (pos > -1) {\n      tasks.splice(pos, 1);\n      props.updateTodo({ ...props.todo,\n        tasks: [...tasks]\n      });\n    }\n  }\n\n  function changeTitle(newTitle) {\n    props.updateTodo({ ...props.todo,\n      title: newTitle\n    });\n  }\n\n  function deleteTodo(params) {\n    props.deleteTodo(props.todo);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todolist\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todolist__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"todolist__header--title\",\n        children: /*#__PURE__*/_jsxDEV(EditableField, {\n          value: title,\n          onNewValue: changeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteTodo,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrashAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoItems, {\n      tasks: tasks,\n      updateTask: updateTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Todolist;\nexport default Todolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"sources":["/Users/anneso/Documents/Ecole Multimédia/React/todolist/src/components/Todolist.js"],"names":["EditableField","TodoForm","TodoItems","FontAwesomeIcon","faTrashAlt","Todolist","props","tasks","todo","title","addTask","newTask","updateTodo","updateTask","taskUpdated","pos","findIndex","task","id","splice","deleteTask","taskDeleted","changeTitle","newTitle","deleteTodo","params"],"mappings":"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","sourcesContent":["import EditableField from \"./EditableField\";\nimport TodoForm from \"./TodoForm\";\nimport TodoItems from \"./TodoItems\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nfunction Todolist(props) {\n    const tasks = props.todo.tasks;\n    const title = props.todo.title;\n\n    function addTask(newTask) {\n        props.updateTodo({ ...props.todo, tasks: [...tasks, newTask] });\n    }\n\n    function updateTask(taskUpdated) {\n        let pos = tasks.findIndex((task => task.id === taskUpdated.id));\n        if (pos > -1) {\n            tasks.splice(pos, 1, taskUpdated);\n            props.updateTodo({ ...props.todo, tasks: [...tasks] });\n        }\n    }\n\n    function deleteTask(taskDeleted) {\n        let pos = tasks.findIndex((task => task.id === taskDeleted.id));\n        if (pos > -1) {\n            tasks.splice(pos, 1);\n            props.updateTodo({ ...props.todo, tasks: [...tasks] });\n        }\n    }\n\n    function changeTitle(newTitle) {\n        props.updateTodo({ ...props.todo, title: newTitle });\n    }\n    function deleteTodo(params) {\n        props.deleteTodo(props.todo);\n    }\n    return (\n        <div className=\"todolist\">\n            <div className=\"todolist__header\">\n                <h2 className=\"todolist__header--title\"><EditableField value={title} onNewValue={changeTitle} /></h2>\n                <button onClick={deleteTodo}><FontAwesomeIcon icon={faTrashAlt} /></button>\n            </div>\n\n            <TodoForm addTask={addTask} />\n            <TodoItems tasks={tasks} updateTask={updateTask} deleteTask={deleteTask} />\n        </div>\n    );\n}\n\nexport default Todolist;"]},"metadata":{},"sourceType":"module"}