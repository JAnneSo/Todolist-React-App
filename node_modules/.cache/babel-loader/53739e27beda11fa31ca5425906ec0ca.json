{"ast":null,"code":"var _jsxFileName = \"/Users/anneso/Documents/Ecole Multime\\u0301dia/React/todolist/src/components/EditableField.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditableField(props) {\n  _s();\n\n  const inputRef = useRef();\n  let value = props.value;\n  const [editMode, setEditMode] = useState(props.editMode || false);\n\n  function swapMode() {\n    console.log(editMode);\n\n    if (editMode) {\n      value = inputRef.current.value;\n    }\n\n    setEditMode(!editMode);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: value,\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: value\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: swapMode,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faPen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditableField, \"LoYa1iXXKLBEDZiy3i5yeUebrkM=\");\n\n_c = EditableField;\nexport default EditableField;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableField\");","map":{"version":3,"sources":["/Users/anneso/Documents/Ecole MultimeÃÅdia/React/todolist/src/components/EditableField.js"],"names":["useState","useRef","FontAwesomeIcon","faPen","EditableField","props","inputRef","value","editMode","setEditMode","swapMode","console","log","current"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,KAAT,QAAsB,mCAAtB;;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAMC,QAAQ,GAAGL,MAAM,EAAvB;AACA,MAAIM,KAAK,GAAGF,KAAK,CAACE,KAAlB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACK,KAAK,CAACG,QAAN,IAAkB,KAAnB,CAAxC;;AACA,WAASE,QAAT,GAAoB;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,QAAIA,QAAJ,EAAc;AACVD,MAAAA,KAAK,GAAGD,QAAQ,CAACO,OAAT,CAAiBN,KAAzB;AACH;;AACDE,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AAED,sBACI;AAAA,eACKA,QAAQ,gBAAG;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,YAAY,EAAED,KAAjC;AAAwC,MAAA,GAAG,EAAED;AAA7C;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA+D;AAAA,gBAAGC;AAAH,qBAD5E,eAEI;AAAQ,MAAA,OAAO,EAAEG,QAAjB;AAAA,6BAA2B,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEP;AAAvB;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAOH;;GAnBQC,a;;KAAAA,a;AAqBT,eAAeA,aAAf","sourcesContent":["import { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\n\nfunction EditableField(props) {\n    const inputRef = useRef();\n    let value = props.value;\n    const [editMode, setEditMode] = useState(props.editMode || false);\n    function swapMode() {\n        console.log(editMode);\n        if (editMode) {\n            value = inputRef.current.value;\n        }\n        setEditMode(!editMode);\n    }\n\n    return (\n        <>\n            {editMode ? <input type=\"text\" defaultValue={value} ref={inputRef} /> : <>{value}</>}\n            <button onClick={swapMode}><FontAwesomeIcon icon={faPen} /></button>\n\n        </>\n    )\n}\n\nexport default EditableField;"]},"metadata":{},"sourceType":"module"}